name: Test & Deploy

on:
  push:
    branches:
      - main

jobs:
  greet:
    name: Greet Job
    runs-on: ubuntu-latest
    steps:
      - name: Welcome Message
        run: echo "Welcome to CI/CD workflow"

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install PostgreSQL and PostGIS
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib postgis
          sudo systemctl start postgresql
          sudo systemctl enable postgresql

      - name: Setup PostgreSQL
        uses: harmon758/postgresql-action@v1
        with:
          postgresql db: 'bean_remote_test'
          postgresql user: 'zdvman'
          postgresql password: ${{ secrets.PGPASSWORD }}
          postgresql version: 'latest'

      - name: Verify PostgreSQL is Running
        run: |
          sudo systemctl status postgresql
          psql -U postgres -c "SELECT version();"

      - name: Enable PostGIS Extension
        run: |
          PGPASSWORD=${{ secrets.PGPASSWORD }} psql -U $PGUSER -d $PGDATABASE -c "CREATE EXTENSION IF NOT EXISTS postgis;"
          PGPASSWORD=${{ secrets.PGPASSWORD }} psql -U $PGUSER -d $PGDATABASE -c "SELECT PostGIS_Version();"

      - name: Install dependencies
        run: npm ci

      - name: Run Tests
        env:
          PGDATABASE: 'bean_remote_test'
          PGUSER: 'zdvman'
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: npm test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Deploy to Render
        run: curl -X POST ${{ secrets.DEPLOY_HOOK_URL }}
